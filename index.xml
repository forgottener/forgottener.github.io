<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>猿资猿味 - 高波的博客</title><link>https://gaoboy.com/</link><description>Recent content on 猿资猿味 - 高波的博客</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><copyright>&lt;a rel="license noopener" href="https://beian.miit.gov.cn/" target="_blank">浙ICP备14043338号-2&lt;/a>~&lt;a rel="license noopener" href="http://www.beian.gov.cn/portal/registerSystemInfo?recordcode=33010802003111" target="_blank">浙公网安备 33010802003111号&lt;/a></copyright><lastBuildDate>Wed, 24 Feb 2021 16:19:40 +0800</lastBuildDate><atom:link href="https://gaoboy.com/index.xml" rel="self" type="application/rss+xml"/><item><title>Unraid下Docker部署Nextcloud网盘</title><link>https://gaoboy.com/post/unraid-docker-nextcloud-setting-ddns-proxy/</link><pubDate>Wed, 24 Feb 2021 16:19:40 +0800</pubDate><guid>https://gaoboy.com/post/unraid-docker-nextcloud-setting-ddns-proxy/</guid><description/></item><item><title>M73 Tiny 黑苹果小记</title><link>https://gaoboy.com/post/m73-4k60hz-hackintosh/</link><pubDate>Sun, 14 Feb 2021 15:14:54 +0800</pubDate><guid>https://gaoboy.com/post/m73-4k60hz-hackintosh/</guid><description/></item><item><title>Docker 镜像介绍</title><link>https://gaoboy.com/post/docker-image/</link><pubDate>Tue, 01 Mar 2016 12:16:59 +0800</pubDate><guid>https://gaoboy.com/post/docker-image/</guid><description>Docker 镜像的实现原理 Docker 镜像是怎么实现增量的修改和维护的？ 每个镜像都由很多层次构成，Docker 使用 Union FS 将这些不同的层结合到一个镜像中去。 通常 Union FS</description></item><item><title>Docker 简介和安装</title><link>https://gaoboy.com/post/docker-introduction/</link><pubDate>Tue, 01 Mar 2016 11:30:51 +0800</pubDate><guid>https://gaoboy.com/post/docker-introduction/</guid><description>什么是 Docker 官网地址：https://www.docker.com/ Docker 最初是 dotCloud 公司创始人 Solomon Hykes 在法国期间发起的一个公司内部项目，它是基于 dotCloud 公司多年</description></item><item><title>Ubuntu Lvm 扩容教程</title><link>https://gaoboy.com/post/ubuntu-lvm-expansion/</link><pubDate>Thu, 25 Feb 2016 09:40:26 +0800</pubDate><guid>https://gaoboy.com/post/ubuntu-lvm-expansion/</guid><description/></item><item><title>Springboot 入门指引</title><link>https://gaoboy.com/post/springboot-introduction/</link><pubDate>Sat, 21 Mar 2015 14:25:40 +0800</pubDate><guid>https://gaoboy.com/post/springboot-introduction/</guid><description/></item><item><title>Java 异常处理</title><link>https://gaoboy.com/post/java-exception-handle/</link><pubDate>Sun, 25 Jan 2015 14:58:53 +0800</pubDate><guid>https://gaoboy.com/post/java-exception-handle/</guid><description>概述 异常是程序中的一些错误，但并不是所有的错误都是异常，并且错误有时候是可以避免的。 比如说，你的代码少了一个分号，那么运行出来结果是提示是错</description></item><item><title>Java Scanner 类</title><link>https://gaoboy.com/post/java-scanner/</link><pubDate>Sun, 25 Jan 2015 14:56:23 +0800</pubDate><guid>https://gaoboy.com/post/java-scanner/</guid><description>概述 java.util.Scanner 是 Java5 的新特征，我们可以通过 Scanner 类来获取用户的输入。 下面是创建 Scanner 对象的基本语法： Scanner s = new Scanner(System.in); 接下来我们演示一个最简单的的数据输入，并通过 Scanner 类</description></item><item><title>Java 流(Stream)、文件(File)和IO</title><link>https://gaoboy.com/post/java-stream-file-io/</link><pubDate>Sun, 25 Jan 2015 14:56:23 +0800</pubDate><guid>https://gaoboy.com/post/java-stream-file-io/</guid><description>概述 Java.io 包几乎包含了所有操作输入、输出需要的类。所有这些流类代表了输入源和输出目标。 Java.io 包中的流支持很多种格式，比如：基本类型、对象、本地化字符</description></item><item><title>Java 方法</title><link>https://gaoboy.com/post/java-function/</link><pubDate>Sun, 25 Jan 2015 14:53:33 +0800</pubDate><guid>https://gaoboy.com/post/java-function/</guid><description>概述 在前面几个章节中我们经常使用到System.out.println()，那么它是什么呢？ println()是一个方法 (Method)，而</description></item><item><title>Java 正则表达式</title><link>https://gaoboy.com/post/java-regex/</link><pubDate>Sun, 25 Jan 2015 14:43:23 +0800</pubDate><guid>https://gaoboy.com/post/java-regex/</guid><description/></item><item><title>Java 日期时间</title><link>https://gaoboy.com/post/java-date/</link><pubDate>Sun, 25 Jan 2015 14:42:23 +0800</pubDate><guid>https://gaoboy.com/post/java-date/</guid><description/></item><item><title>Java 数组</title><link>https://gaoboy.com/post/java-array/</link><pubDate>Sun, 25 Jan 2015 14:38:23 +0800</pubDate><guid>https://gaoboy.com/post/java-array/</guid><description/></item><item><title>Java StringBuffer &amp; StringBuilder 类</title><link>https://gaoboy.com/post/java-stringbuffer-and-stringbuilder-class/</link><pubDate>Sun, 25 Jan 2015 14:33:15 +0800</pubDate><guid>https://gaoboy.com/post/java-stringbuffer-and-stringbuilder-class/</guid><description/></item><item><title>Java String 类</title><link>https://gaoboy.com/post/java-string-class/</link><pubDate>Sun, 25 Jan 2015 14:30:15 +0800</pubDate><guid>https://gaoboy.com/post/java-string-class/</guid><description/></item><item><title>Java Character 类</title><link>https://gaoboy.com/post/java-character-class/</link><pubDate>Sun, 25 Jan 2015 14:28:25 +0800</pubDate><guid>https://gaoboy.com/post/java-character-class/</guid><description/></item><item><title>Java Number &amp; Math 类</title><link>https://gaoboy.com/post/java-number-and-math-class/</link><pubDate>Sun, 25 Jan 2015 14:26:25 +0800</pubDate><guid>https://gaoboy.com/post/java-number-and-math-class/</guid><description/></item><item><title>Java 分支结构</title><link>https://gaoboy.com/post/java-branching-structure/</link><pubDate>Sun, 25 Jan 2015 14:22:21 +0800</pubDate><guid>https://gaoboy.com/post/java-branching-structure/</guid><description/></item><item><title>Java 循环结构</title><link>https://gaoboy.com/post/java-loop-structure/</link><pubDate>Sun, 25 Jan 2015 14:19:23 +0800</pubDate><guid>https://gaoboy.com/post/java-loop-structure/</guid><description/></item><item><title>Java 运算符</title><link>https://gaoboy.com/post/java-operator/</link><pubDate>Sun, 25 Jan 2015 14:18:23 +0800</pubDate><guid>https://gaoboy.com/post/java-operator/</guid><description/></item><item><title>Java 修饰符</title><link>https://gaoboy.com/post/java-specifier/</link><pubDate>Sun, 25 Jan 2015 13:58:21 +0800</pubDate><guid>https://gaoboy.com/post/java-specifier/</guid><description/></item><item><title>Java 变量类型</title><link>https://gaoboy.com/post/java-variable-type/</link><pubDate>Sun, 25 Jan 2015 13:50:11 +0800</pubDate><guid>https://gaoboy.com/post/java-variable-type/</guid><description/></item><item><title>Java 基本数据类型</title><link>https://gaoboy.com/post/java-basic-data-type/</link><pubDate>Sun, 25 Jan 2015 13:40:11 +0800</pubDate><guid>https://gaoboy.com/post/java-basic-data-type/</guid><description/></item><item><title>Java 对象和类</title><link>https://gaoboy.com/post/java-object-class/</link><pubDate>Sun, 25 Jan 2015 13:30:10 +0800</pubDate><guid>https://gaoboy.com/post/java-object-class/</guid><description/></item><item><title>Java 基础语法</title><link>https://gaoboy.com/post/java-basic-grammar/</link><pubDate>Sun, 25 Jan 2015 13:25:10 +0800</pubDate><guid>https://gaoboy.com/post/java-basic-grammar/</guid><description/></item><item><title>计算机语言的发展史</title><link>https://gaoboy.com/post/computer-language-introduction/</link><pubDate>Sat, 24 Jan 2015 16:25:10 +0800</pubDate><guid>https://gaoboy.com/post/computer-language-introduction/</guid><description/></item><item><title>计算机的发展历程</title><link>https://gaoboy.com/post/computer-introduction/</link><pubDate>Fri, 23 Jan 2015 13:25:40 +0800</pubDate><guid>https://gaoboy.com/post/computer-introduction/</guid><description/></item><item><title>虚拟机安装ubuntu及其配置</title><link>https://gaoboy.com/post/vm-ubuntu-install-setting/</link><pubDate>Sun, 26 Jan 2014 10:20:32 +0800</pubDate><guid>https://gaoboy.com/post/vm-ubuntu-install-setting/</guid><description/></item><item><title>Linux 简介</title><link>https://gaoboy.com/post/linux-introduction/</link><pubDate>Sat, 25 Jan 2014 10:05:00 +0800</pubDate><guid>https://gaoboy.com/post/linux-introduction/</guid><description/></item><item><title>Hello World</title><link>https://gaoboy.com/post/hello-world/</link><pubDate>Tue, 12 Feb 2013 23:00:38 +0800</pubDate><guid>https://gaoboy.com/post/hello-world/</guid><description/></item></channel></rss>